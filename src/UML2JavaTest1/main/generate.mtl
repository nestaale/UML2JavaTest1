[comment encoding = UTF-8 /]
[module generate('http://www.eclipse.org/uml2/5.0.0/UML','http://www.eclipse.org/emf/2002/Ecore')]


[template public generateElement(aModel : Model)]
[comment @main/]
[file (aModel.name.concat('.log'), false, 'UTF-8')]

Log file generated for [aModel.name/]

[for (c:Class | aModel.eContents(Class)) ]
parsing class [c.name/]
  [if c.name.strstr('DataTypes')]
  Generating Datatypes
    [for (subc:Class | c.eContents(Class)) ]
      generating file [subc.name.concat('.java')/]
      [subc.datatypesgenerate()/]
    [/for]
  [else]

     [for (object:EObject | c.getStereotypeApplications()) ]
     2.[object.eClass()/]
     3.[object.eClass().name/]
         [for (attribute:EAttribute | object.eClass().eAllAttributes) ]
  ------>[attribute.name/]
         [if attribute.name.strstr('Function')]
            Generating Function [c.name/].java
            [c.functionsgenerate()/]
         [/if]
         [attribute.eAttributeType.name/]
         [attribute.eAttributeType/]
         [object.eGet(attribute)/]
         [/for]
     [/for]

  [/if]





[/for]


----namedelements----
[for (e:NamedElement | aModel.eContents(NamedElement)) ]
<<[e.getStereotypeApplications().eClass().name/]>> [e.eClass().name/] : [e.name/]
[e.getSourceDirectedRelationships()/]
1.[e.getSourceDirectedRelationships().eClass().eAllReferences.eGet('conveyed')/]
2.[e.getSourceDirectedRelationships().eClass().eAllStructuralFeatures/]

[for (feature : EReference | e.getSourceDirectedRelationships().eClass().eReferences)]
3.[e.getSourceDirectedRelationships().eClass().eGet(feature)/]
[/for]







[e.getTargetDirectedRelationships()/]

[/for]

[/file]
[/template]



[template public functionsgenerate(aClass : Class)]
[file (aClass.name.concat('.java'), false)]
  [for (object:EObject | aClass.getStereotypeApplications()) ]
    [for (attribute:EAttribute | object.eClass().eAllAttributes) ]
       [if attribute.name.strstr('Function')]
public class [aClass.name.toUpperFirst()/] implements [attribute.name.toUpperFirst()/]<[attribute.eAttributeType.name/], *WordCount*> {

  @Override
  public void [attribute.name.substring(1,attribute.name.size()-8)/] ([attribute.eAttributeType.name/] value, Collector<*WordCount*> out) {
    [object.eGet(attribute)/]
  }
}
      [/if]
    [/for]
  [/for]
[/file]
[/template]



[template public datatypesgenerate(aClass : Class)]
[file (aClass.name.concat('.java'), false)]


public class [aClass.name/] {
  [for (p: Property | aClass.attribute) separator('\n')]
    private [p.type.name/] [p.name/];
  [/for]
 
    public [aClass.name/]() {

    }

    public [aClass.name/]([for (p: Property | aClass.attribute) separator(',')][p.type.name/] [p.name/][/for]) {
    [for (p: Property | aClass.attribute)]
        this.[p.name/] = [p.name/];
    [/for]     
    }

    [for (p: Property | aClass.attribute) separator('\n')]
    public [p.type.name/] get[p.name/]() {
        return [p.name/];
    }

    public void set[p.name/]([p.type.name/] [p.name/]) {
        this.[p.name/] = [p.name/];
    }
    [/for]
 
    @Override
    public String toString() {
        return "(" + [for (p: Property | aClass.attribute) separator(' + ')]this.[p.name/][/for] + ")";
    }

}
[/file]
[/template]